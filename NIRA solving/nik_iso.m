% NIKAIDO_ISODA defines the Nikaido-Isoda function in terms% of the payoff function relax_f(x)% nik_iso(y,x)=sum(relax_f(x(1),..,y(i),..,x(n))%						- relax_f(x))% note that x and y are reversed as compared to the literaturefunction g = nik_iso(y,x, dims)if length(x) ~= length(y)	error('x and y of different lengths')end;global relaxfun psi = 0;temp = x;fun1 = [relaxfun,'(temp,i)'];fun2 = [relaxfun,'(x,i)'];for i = 1:length(dims)    temp((sum(dims(1:(i-1)))+1):sum(dims(1:i))) = y((sum(dims(1:(i-1)))+1):sum(dims(1:i)));	psi = psi + eval(fun1) - eval(fun2);	temp((sum(dims(1:(i-1)))+1):sum(dims(1:i))) = x((sum(dims(1:(i-1)))+1):sum(dims(1:i)));end;g = -psi;% This little bit makes g an unrealistically high real number if it was a% complex number. This is because you can't minimise a complex number, so% action vectors that lead to complex numbers should be artificially% excluded from our analysisif ~isreal(g);g = real(g)*(1e10);end